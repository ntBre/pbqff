* Tasks [4/12]
** WAIT parse input - for now no processing
   - initial geometry
   - opt bool
   - path to spectro
** DONE optimize geometry (if requested)
** DONE read out optimized geometry
** DONE parse intder template header
   - easy with Intder::load_file
** TODO run taylor.py to generate disps and anpass
*** DONE write taylor.py
*** TODO determine symmetries of coordinates
    - [ ] determine point group of molecule
    - [ ] run one disp of each coord
    - [ ] determine symmetry of each displacement
*** TODO sort disps by irrep
    - implement cmp::Ordering (I think) on Irrep to call sort, probably on a
      vector of tuples (coord_number, irrep)
*** TODO call taylor code
** TODO run intder to get disps
   - combine
     1. template header
     2. taylor disps
     3. optimized geometry
** TODO build and run points
** TODO run anpass
** TODO intder_geom
** TODO intder freqs
** TODO call out to spectro

* Improvements
** TODO make =Mopac::new= take a template
   - hard-coding the template for now, but eventually I want to be able to read
     in a template like the Go version. this will propagate to rust-semp, but
     there I can use a const template for the whole program
** TODO warn if directories exist and say to use overwrite flag
